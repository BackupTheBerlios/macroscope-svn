MACRO (CHECK_TYPE_EQUAL TYPE1 TYPE2 VARIABLE)
  IF ("${VARIABLE}" MATCHES "^${VARIABLE}$")
    STRING (TOUPPER "${TYPE1}" TYPE1_UPPER)
    STRING (TOUPPER "${TYPE2}" TYPE2_UPPER)
    SET (SIZEOF_TYPE1 ${SIZEOF_${TYPE1_UPPER}})
    SET (SIZEOF_TYPE2 ${SIZEOF_${TYPE2_UPPER}})
    SET (${VARIABLE} 0 CACHE INTERNAL "${TYPE1} defined as ${TYPE2}")
    IF (SIZEOF_TYPE1 AND SIZEOF_TYPE2)
      SET (MACRO_CHECK_TYPE_DEFINITIONS 
        "-DCHECK_TYPE_EQUAL1=${TYPE1} -DCHECK_TYPE_EQUAL2=${TYPE2} ${CMAKE_REQUIRED_FLAGS}"
      )
      IF (CMAKE_REQUIRED_LIBRARIES)
        SET (CHECK_TYPE_EQUAL_ADD_LIBRARIES
          "-DLINK_LIBRARIES:STRING=${CMAKE_REQUIRED_LIBRARIES}"
      )
      ELSE (CMAKE_REQUIRED_LIBRARIES)
        SET (CHECK_TYPE_EQUAL_ADD_LIBRARIES)
      ENDIF (CMAKE_REQUIRED_LIBRARIES)
      TRY_COMPILE(${VARIABLE}
        ${CMAKE_CURRENT_BINARY_DIR}
        ${CMAKE_BINARY_DIR}/CheckTypeEqual.cxx
        COMPILE_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS}
        CMAKE_FLAGS -DCOMPILE_DEFINITIONS:STRING=${MACRO_CHECK_TYPE_DEFINITIONS}
        "${CHECK_TYPE_EQUAL_ADD_LIBRARIES}"
        OUTPUT_VARIABLE OUTPUT
      )
      IF (NOT ${VARIABLE} AND SIZEOF_TYPE1 AND SIZEOF_TYPE2)
        MESSAGE (STATUS "Checking for ${TYPE1} defined as ${TYPE2} - yes")
        SET (${VARIABLE} 1 CACHE INTERNAL "${TYPE1} defined as ${TYPE2}")
        FILE (APPEND ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/CMakeOutput.log
          "Checking for ${TYPE1} defined as ${TYPE2} with the following output:\n"
          "${OUTPUT}\n\n"
        )
      ELSE (NOT ${VARIABLE} AND SIZEOF_TYPE1 AND SIZEOF_TYPE2)
        MESSAGE (STATUS "Checking for ${TYPE1} defined as ${TYPE2} - no")
        FILE (APPEND ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/CMakeError.log
          "Checking for ${TYPE1} defined as ${TYPE2} with the following output:\n"
          "${OUTPUT}\n\n"
        )
      ENDIF (NOT ${VARIABLE} AND SIZEOF_TYPE1 AND SIZEOF_TYPE2)
    ELSE (SIZEOF_TYPE1 AND SIZEOF_TYPE2)
      MESSAGE (STATUS "Checking for ${TYPE1} defined as ${TYPE2} - no")
    ENDIF (SIZEOF_TYPE1 AND SIZEOF_TYPE2)
  ENDIF ("${VARIABLE}" MATCHES "^${VARIABLE}$")
ENDMACRO (CHECK_TYPE_EQUAL)
