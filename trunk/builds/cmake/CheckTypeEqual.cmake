MACRO (CHECK_TYPE_EQUAL TYPE1 TYPE2 VARIABLE)
#  IF ("${VARIABLE}" MATCHES "^${VARIABLE}$")
    MESSAGE (STATUS "Checking for ${TYPE1} defined as ${TYPE2}")
    SET (MACRO_CHECK_TYPE_DEFINITIONS 
      "-DCHECK_TYPE_EQUAL1=${TYPE1} -DCHECK_TYPE_EQUAL2=${TYPE2} ${CMAKE_REQUIRED_FLAGS}"
    )
    IF (CMAKE_REQUIRED_LIBRARIES)
      SET (CHECK_TYPE_EQUAL_ADD_LIBRARIES
        "-DLINK_LIBRARIES:STRING=${CMAKE_REQUIRED_LIBRARIES}"
    )
    ELSE (CMAKE_REQUIRED_LIBRARIES)
      SET (CHECK_TYPE_EQUAL_ADD_LIBRARIES)
    ENDIF (CMAKE_REQUIRED_LIBRARIES)
    TRY_COMPILE(${VARIABLE}
      ${CMAKE_CURRENT_BINARY_DIR}
      ${CMAKE_BINARY_DIR}/CheckTypeEqual.cxx
      COMPILE_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS}
      CMAKE_FLAGS -DCOMPILE_DEFINITIONS:STRING=${MACRO_CHECK_TYPE_DEFINITIONS}
      "${CHECK_TYPE_EQUAL_ADD_LIBRARIES}"
      OUTPUT_VARIABLE OUTPUT
    )
    IF (NOT ${VARIABLE} AND SIZEOF_${TYPE1} AND SIZEOF_${TYPE2})
      MESSAGE (STATUS "Checking for ${TYPE1} defined as ${TYPE2} - yes")
      SET (${VARIABLE} 1 CACHE INTERNAL "${TYPE1} defined as ${TYPE2}")
      FILE (APPEND ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/CMakeOutput.log
        "Checking for ${TYPE1} defined as ${TYPE2} with the following output:\n"
        "${OUTPUT}\n\n"
      )
    ELSE (NOT ${VARIABLE} AND SIZEOF_${TYPE1} AND SIZEOF_${TYPE2})
      MESSAGE (STATUS "Checking for ${TYPE1} defined as ${TYPE2} - no")
      SET (${VARIABLE} 0 CACHE INTERNAL "${TYPE1} defined as ${TYPE2}")
      FILE (APPEND ${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/CMakeError.log
        "Checking for ${TYPE1} defined as ${TYPE2} with the following output:\n"
        "${OUTPUT}\n\n"
      )
    ENDIF (NOT ${VARIABLE} AND SIZEOF_${TYPE1} AND SIZEOF_${TYPE2})
#  ENDIF ("${VARIABLE}" MATCHES "^${VARIABLE}$")
ENDMACRO (CHECK_TYPE_EQUAL)
