/*!
 * \page msmail1c_page msmail1c
 * \anchor msmail1c_doc
 * \if english
 * \section msmail1c_intro What is msmail1c
 * This is a programm.
 * \endif
 *
 * \if russian
 * \section msmail1c_intro Что такое msmail1c
 * Внешняя компонента 1С.
 * \section msmail1c_objects Объекты msmail1c
 * AddIn.msmail1c
 * \subsection msmail1c_object_AddIn_msmail1c AddIn.msmail1c
 * Объект - расширение встроенного языка 1С написанный по технологии создания внешних компонент 1С.
 * Соответствует стандарту компонент 1С версии 2.0
 * \subsubsection msmail1c_object_AddIn_msmail1c_functions Функции
 * Все функции возвращают значение типа "Число" кроме того когда указано другое.
 * При этом нулевое значение указывает на ошибку при выполнении функции, не нулевое означает успешное выполнение.\n\n
 * <B>БлокироватьФайл(ПутьИмяФайла,МинТаймаут,МакТаймаут)</B>\n
 * \n\n
 * <B>РазблокироватьФайл(ПутьИмяФайла)</B>\n
 * \n\n
 * <B>ПолучитьКодОшибки()</B>\n
 * Возвращает код ошибки для последней вызванной функции, является кодом ошибки Windows API, не всегда :)\n\n
 * <B>Спать(Таймаут)</B>\n
 * Таймаут задаётся в милисекундах, т.е. 1000 это 1 секунда.\n\n
 * <B>СпатьВ(МинТаймаут,МакТаймаут)</B>\n
 * Таймаут выбирается случайным образом в интервале от МинТаймаут по МакТаймаут\n\n
 * <B>ТекстВФайл(ПутьИмяФайла,Текст)</B>\n
 * Записывает строку в файл\n\n
 * <B>НовоеСообщение()</B>\n
 * Создаёт новое сообщение и возвращает строковый идентификатор сообщения.\n\n
 * <B>УстановитьАтрибутСообщения(ИД,ИДАтр,Атр)</B>\n
 * Создаёт и устанавливает новый атрибут собщения. Где ИД - идентификатор сообщения,\n
 * ИДАтр - идентификатор атрибута, Атр - значение атрибута.\n\n
 * <B>ПолучитьАтрибутСообщения(ИД,ИДАтр)</B>\n
 * Возвращает значение атрибута. Где ИД - идентификатор сообщения, ИДАтр - идентификатор атрибута.\n\n
 * <B>ПослатьСообщение(ИД,Асинхронно)</B>\n
 * Где ИД - идентификатор сообщения, Асинхронно - число, если не ноль то метод вернёт управление немедленно,\n
 * а сообщение будет отправлено в фоновом режиме, после чего придёт событие или событие с кодом ошибки если\n
 * сообщение не удалось отправить.\n\n
 * <B>УдалитьСообщение(ИД,Асинхронно)</B>\n
 * Где ИД - идентификатор сообщения, Асинхронно - число, если не ноль то метод вернёт управление немедленно,\n
 * а сообщение будет удалено в фоновом режиме, после чего придёт событие или событие с кодом ошибки если\n
 * сообщение не удалось удалить.\n\n
 * <B>ПолучитьИБ()</B>\n
 * Запускает процесс получения списка баз, пользователей, групп с сервера. Возвращает управление немедленно\n
 * По окончании приходит событие об успешном получении списков или код ошибки.\n\n
 * СкопироватьСообщение(ИД)</B>\n
 * Создаёт новое сообщение и копирует в него атрибуты из сообщения ИД. Возвращает идентификатор нового сообщения.\n\n
 * <B>УдалитьАтрибутСообщения(ИД,ИДАтр)</B>\n
 * Удаляет атрибут ИДАтр сообщения ИД. Применимо только для исходящих сообщений.\n\n
 * <B>ОтладочноеСообщение(Уровень,Сообщение)</B>\n
 * Выводит в лог файл сообщение с уровнем отладки.\n\n
 * <B>ЭтоКаталог(ПутьИмя)</B>\n
 * Возвращает число не ноль если ПутьИмя является каталогом а не файлом.\n\n
 * <B>УдалитьКаталог(ПутьИмя)</B>\n
 * Удаляет директорию с подкаталогами\n\n
 * <B>MK1100ПослатьИнформациюШтрихкода()</B>\n
 * Зарезервировано, экспериментальная функция.\n\n
 * <B>СписокИБВГруппе(Группа)</B>\n
 * Получает строку - наименование группы, возвращает строку - список значений типа строка, содержащий\n
 * базы данных состоящих в группе\n\n
 * <B>ФайлВСтроку(ПутьИмя)</B>\n
 * Преобразует файл любого содержания в строку. Возвращает строку нулевой длинны если файл не существует.\n\n
 * <B>СтрокуВФайл(ПутьИмя,Строка)</B>\n
 * Создаёт файл или перезаписывает существующий, заполняя данными из строки. Является обратной функцией для
 * <B>функции ФайлВСтроку().\n\n
 * <B>ВремяИзВремениСтрокой(ВремяСтрока)</B>\n
 * Преобразует время из строки понятной человеку в абсолютное число микросекунд. Используется для атрибутов сообщения
 * "#Sender.Sended" и  "#Relay.X.Received" где X - число от 0 и больше. Возвращает число строкой.\n
 * Причём время задаётся по Гринвичу.\n\n
 * <B>СоздатьХешированныйМассив()</B>\n
 * Создаёт ассоциированный массив значений типа ключ=значение. Где ключ строка любой длинны, значение любой объект.\n
 * Возвращает номер массива для последующих обращений к нему.\n\n
 * <B>УдалитьХешированныйМассив(НомерМассива)</B>\n
 * Удаляет ассоциированный массив. Причем массивы с большими номерами будут переиндекированы в номера на единицу меньше.\n\n
 * <B>УстановитьЗначениеХешированногоМассива(НомерМассива,Ключ,Значение)</B>\n
 * Устанавливает значение по ключу в ассоциированном массиве. Если был создан новый элемент то возвращайт не ноль.
 * Если элемент уже существовал то возвращает ноль и значение будет переутановлено на новое.\n\n 
 * <B>ПолучитьЗначениеХешированногоМассива(НомерМассива,Ключ)</B>\n
 * Возвращает значение найденное по ключу, если ключ не найден, возвращает пустое значение и устанавливает
 * код ошибки ERROR_NOT_FOUND 1168.\n\n
 * <B>УдалитьВсеХешированныеМассивы()</B>\n
 * Удаляет все ассоциированные массивы и освобождает все объекты. Обязательно вызывать в процедуре ПриЗавершенииРаботыСистемы,
 * если вы используете ассоциированные массивы.\n\n
 * <B>УстановитьСканерУстройства(НомерПорта)</B>\n
 * Разрешает получение событий при сканировании штрихкоды со сканера подключенного к порту НомерПорта.
 * Можно задать несколько портов.
 * При этом приходит событие "BarCodeValue_COMX" где X это номер порта.\n\n
 * <B>УдалитьСканерУстройства(НомерПорта)</B>\n
 * Запрещает обработку событий при сканировании штрихкода со сканера.\n\n
 * <B>ПрикрепитьФайлКСообщению(ИД,ИДАтр,ПутьИмя)</B>\n
 * Прикрепляет файл ПутьИмя любого содержания к сообщению ИД в атрибут ИДАтр.\n\n
 * Отсутствую ограничения по памяти свойственные функции ФайлВСтроку(). Можно прикрепить файл любого размера.\n\n
 * <B>СохранитьПрикреплениеСообщенияВФайл(ИД,ИДАтр,ПутьИмя)</B>\n
 * Сохраняет файл в ПутьИмя из сообщения ИД из атрибута ИДАтр.\n\n
 * <B>ПолучитьСообщения(Новые)</B>\n
 * Для использования в пакетном режиме. Получает сообщения с сервера. Если параметр Новые не ноль то только новые сообщения
 * будут выбраны. При этом события не будут посланы. Это синхронный режим работы. Функция вернёт управление только после
 * получения всех сообщений имеющихся на сервере в данный момент.\n\n
 * \subsubsection msmail1c_object_AddIn_msmail1c_properties Свойства
 * <B>Наименование</B>\n
 * <B>Активирован</B>\n
 * <B>ПриоритетПроцесса</B>\n
 * <B>КодОшибки</B>\n
 * <B>Пользователь</B>\n
 * <B>Ключ</B>\n
 * <B>Группы</B>\n
 * <B>ПочтовыйСервер</B>\n
 * <B>КонфигурационныйФайл</B>\n
 * <B>ЛогФайл</B>\n
 * <B>ЛокальноеВремя</B>\n
 * <B>СистемноеВремя</B>\n
 * <B>ВУИД</B>\n
 * <B>СлучайноеЧисло</B>\n
 * период генератора 2^^(8+64*(3+2^^8)-1) = 2^^16583 = 9.5591240E+4991\n\n
 * <B>Версия</B>\n
 * <B>СоединениеУстановлено</B>\n
 * <B>РабочийСервер</B>\n
 * <B>СписокПолученныхСообщений</B>\n
 * <B>СписокИБ</B>\n
 * <B>ГрупповойСписокИБ</B>\n
 * <B>СписокПользователей</B>\n
 * <B>СписокНеотправленныхСообщений</B>\n
 * <B>MK1100Порт</B>\n
 * <B>АсинхронноеПолучениеСообщений</B>\n
 * \endif
 */
