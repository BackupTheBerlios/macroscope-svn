/*-
 * Copyright 2005 Guram Dukashvili
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
//---------------------------------------------------------------------------
// WARNING: MACHINE GENERATED, PLEASE DO NOT EDIT
//---------------------------------------------------------------------------
#include <adicpp/lconfig.h>
#include <adicpp/utf8embd.h>
//---------------------------------------------------------------------------
namespace utf8 {
//---------------------------------------------------------------------------
#if defined(EMBED_CP1255_SUPPORT) || defined(EMBED_ALL_CP)
extern const uint8_t cp1255s2utf8s[128] = {
  0xE7, 0x04, 0x00, 0x00, 0x10, 0x00, 0x7F, 0x00,
  0x00, 0x86, 0x87, 0x20, 0x20, 0x8C, 0x90, 0x8C,
  0x00, 0x91, 0x92, 0x18, 0x20, 0x93, 0x94, 0x1C,
  0x20, 0x96, 0x97, 0x13, 0x20, 0x9C, 0xA3, 0x9C,
  0x00, 0xA5, 0xA9, 0xA5, 0x00, 0xAB, 0xB9, 0xAB,
  0x00, 0xBB, 0xBF, 0xBB, 0x00, 0xC0, 0xD3, 0xB0,
  0x05, 0xD4, 0xD8, 0xF0, 0x05, 0xD9, 0xDF, 0x8D,
  0xF8, 0xE0, 0xFA, 0xD0, 0x05, 0xFB, 0xFC, 0x94,
  0xF8, 0xFD, 0xFE, 0x0E, 0x20, 0x13, 0x80, 0xAC,
  0x20, 0x81, 0x81, 0x00, 0x82, 0x1A, 0x20, 0x83,
  0x92, 0x01, 0x84, 0x1E, 0x20, 0x85, 0x26, 0x20,
  0x88, 0xC6, 0x02, 0x89, 0x30, 0x20, 0x8A, 0x8A,
  0x00, 0x8B, 0x39, 0x20, 0x95, 0x22, 0x20, 0x98,
  0xDC, 0x02, 0x99, 0x22, 0x21, 0x9A, 0x9A, 0x00,
  0x9B, 0x3A, 0x20, 0xA4, 0xAA, 0x20, 0xAA, 0xD7,
  0x00, 0xBA, 0xF7, 0x00, 0xFF, 0x96, 0xF8, 0x00
};
//---------------------------------------------------------------------------
extern const uint8_t utf8s2cp1255s[157] = {
  0x01, 0x3F, 0x11, 0x01, 0x00, 0x00, 0x7F, 0x00,
  0x00, 0x8C, 0x00, 0x90, 0x00, 0x8C, 0x9C, 0x00,
  0xA9, 0x00, 0x9C, 0xAB, 0x00, 0xB9, 0x00, 0xAB,
  0xBB, 0x00, 0xBF, 0x00, 0xBB, 0xB0, 0x05, 0xC3,
  0x05, 0xC0, 0xD0, 0x05, 0xEA, 0x05, 0xE0, 0xF0,
  0x05, 0xF4, 0x05, 0xD4, 0x0E, 0x20, 0x0F, 0x20,
  0xFD, 0x13, 0x20, 0x14, 0x20, 0x96, 0x18, 0x20,
  0x19, 0x20, 0x91, 0x1C, 0x20, 0x1D, 0x20, 0x93,
  0x20, 0x20, 0x21, 0x20, 0x86, 0x8D, 0xF8, 0x93,
  0xF8, 0xD9, 0x94, 0xF8, 0x95, 0xF8, 0xFB, 0x01,
  0xFF, 0x1E, 0xFF, 0x21, 0x20, 0xFF, 0x5E, 0xFF,
  0x40, 0xFF, 0xFF, 0x14, 0x00, 0x01, 0x81, 0x00,
  0x81, 0x8A, 0x00, 0x8A, 0x9A, 0x00, 0x9A, 0xD7,
  0x00, 0xAA, 0xF7, 0x00, 0xBA, 0x91, 0x01, 0x46,
  0x92, 0x01, 0x83, 0xC6, 0x02, 0x88, 0xDC, 0x02,
  0x98, 0x1A, 0x20, 0x82, 0x1E, 0x20, 0x84, 0x22,
  0x20, 0x95, 0x26, 0x20, 0x85, 0x30, 0x20, 0x89,
  0x39, 0x20, 0x8B, 0x3A, 0x20, 0x9B, 0xAA, 0x20,
  0xA4, 0xAC, 0x20, 0x80, 0x22, 0x21, 0x99, 0x96,
  0xF8, 0xFF, 0xFF, 0xFF, 0xFF
};
#endif
//---------------------------------------------------------------------------
} // namespace utf8
//---------------------------------------------------------------------------
